#!/usr/bin/env python3
import rospy
import random
from gazebo_msgs.srv import SetModelState
from gazebo_msgs.msg import ModelState
from gazebo_msgs.srv import GetModelState
import time

def move_object(speed, move_distance, object_name):
    
    #print(time.time())
    # Constants
    LOOP_RATE_HZ = 30           # Frequency of the control loop in Hz
    POSITION_TOLERANCE = 0.01   # Minimum distance to consider as "reached"
    TIME_STEP_SEC = 1.0 / LOOP_RATE_HZ  # Time step for each loop iteration

    # Initialize the ROS node
    #rospy.init_node('move_object', anonymous=True)
    
    # Wait for the Gazebo services to become available
    rospy.wait_for_service('/gazebo/set_model_state')
    rospy.wait_for_service('/gazebo/get_model_state')

    set_model_state = rospy.ServiceProxy('/gazebo/set_model_state', SetModelState)
    get_model_state = rospy.ServiceProxy('/gazebo/get_model_state', GetModelState)

    # Directions for movement (X, Y)
    directions = [
        (-0.00030460968721746084, 0.03490481287456702),
        (-0.0009137362745910149, 0.034894180530434915),
        (-0.0015225845290438578, 0.03487291908088573),
        (-0.002130968989499271, 0.034841035002362936),
        (-0.002738704336157305, 0.03479853800706573),
        (-0.0033456054469445107, 0.03474544103999061),
        (-0.0039514874539026135, 0.03468176027498801),
        (-0.004556165799503242, 0.034607515109835923),
        (-0.005159456292865183, 0.03452272816033086),
        (-0.0057611751658595, 0.034427425253398924),
        (-0.006361139129088089, 0.034321635419228946),
        (-0.006959165427716574, 0.034205390882429076),
        (-0.007555071897140886, 0.03407872705221132),
        (-0.008148677018477546, 0.03394168251160545),
        (-0.008739799973856321, 0.03379429900570602),
        (-0.009328260701498836, 0.03363662142895685),
        (-0.009913879950566917, 0.03346869781147521),
        (-0.010496479335763809, 0.03329057930442125),
        (-0.01107588139167337, 0.03310232016441861),
        (-0.011651909626816837, 0.032903977737024026),
        (-0.01222438857741337, 0.03269561243926311),
        (-0.012793143860828637, 0.03247728774122349),
        (-0.0133580022286941, 0.03224907014672351),
        (-0.013918791619679016, 0.032011029173052874),
        (-0.01447534121190186, 0.031763237329798466),
        (-0.015027481474965798, 0.031505770096755925),
        (-0.015575044221598278, 0.03123870590093869),
        (-0.01611786265888182, 0.030962126092688114),
        (-0.016655771439062494, 0.030676114920892505),
        (-0.017188606709914067, 0.030380759507325772),
        (-0.017716206164652748, 0.030076149820108422),
        (-0.018238409091372754, 0.02976237864630149),
        (-0.018755056422003813, 0.029439541563644367),
        (-0.01926599078076463, 0.02910773691143964),
        (-0.019771056532099873, 0.028767065760598287),
        (-0.020270099828088695, 0.028417631882854177),
        (-0.020762968655309244, 0.02805954171915026),
        (-0.021249512881141852, 0.02769290434722005),
        (-0.021729584299502003, 0.0273178314483582),
        (-0.022203036675985777, 0.026934437273403722),
        (-0.022669725792412, 0.026542838607936048),
        (-0.02312950949075554, 0.026143154736701923),
        (-0.02358224771644757, 0.025735507407280478),
        (-0.024027802561038536, 0.025320020792997555),
        (-0.024466038304207238, 0.024896821455100637),
        (-0.024896821455100637, 0.024466038304207238),
        (-0.025320020792997555, 0.024027802561038536),
        (-0.025735507407280478, 0.02358224771644757),
        (-0.026143154736701923, 0.02312950949075554),
        (-0.026542838607935826, 0.022669725792412),
        (-0.026934437273403722, 0.022203036675985777),
        (-0.02731783144835842, 0.021729584299502225),
        (-0.027692904347219827, 0.02124951288114163),
        (-0.028059541719150483, 0.020762968655309244),
        (-0.028417631882854177, 0.020270099828088695),
        (-0.02876706576059851, 0.019771056532099873),
        (-0.02910773691143942, 0.01926599078076463),
        (-0.029439541563644367, 0.018755056422004035),
        (-0.02976237864630149, 0.01823840909137253),
        (-0.03007614982010809, 0.017716206164652526),
        (-0.030380759507325994, 0.01718860670991429),
        (-0.030676114920892505, 0.016655771439062272),
        (-0.030962126092688114, 0.01611786265888182),
        (-0.03123870590093869, 0.0155750442215985),
        (-0.031505770096756036, 0.015027481474965798),
        (-0.031763237329798466, 0.01447534121190186),
        (-0.032011029173052985, 0.013918791619679016),
        (-0.03224907014672351, 0.0133580022286941),
        (-0.03247728774122316, 0.012793143860828637),
        (-0.03269561243926311, 0.012224388577413148),
        (-0.03290397773702414, 0.011651909626816837),
        (-0.03310232016441861, 0.011075881391673592),
        (-0.033290579304421364, 0.010496479335763809),
        (-0.03346869781147521, 0.009913879950566917),
        (-0.03363662142895685, 0.009328260701498836),
        (-0.03379429900570613, 0.008739799973856321),
        (-0.03394168251160551, 0.008148677018477546),
        (-0.03407872705221093, 0.007555071897140664),
        (-0.034205390882429076, 0.006959165427716796),
        (-0.034321635419229, 0.006361139129088089),
        (-0.03442742525339898, 0.0057611751658595),
        (-0.03452272816033092, 0.005159456292865183),
        (-0.03460751510983595, 0.004556165799503242),
        (-0.034681760274988066, 0.0039514874539026135),
        (-0.03474544103999064, 0.0033456054469445107),
        (-0.03479853800706581, 0.002738704336157305),
        (-0.03484103500236253, 0.002130968989499271),
        (-0.03487291908088577, 0.0015225845290438578),
        (-0.034894180530434964, 0.0009137362745910149),
        (-0.03490481287456707, 0.00030460968721746084),
        (-0.03490481287456708, -0.00030460968721746084),
        (-0.03489418053043496, -0.0009137362745910149),
        (-0.03487291908088577, -0.0015225845290438578),
        (-0.03484103500236298, -0.002130968989499271),
        (-0.03479853800706581, -0.002738704336157305),
        (-0.03474544103999064, -0.0033456054469445107),
        (-0.03468176027498762, -0.003951487453902391),
        (-0.03460751510983598, -0.004556165799503464),
        (-0.03452272816033092, -0.005159456292865183),
        (-0.03442742525339898, -0.0057611751658595),
        (-0.034321635419229, -0.006361139129088089),
        (-0.034205390882429076, -0.006959165427716574),
        (-0.03407872705221138, -0.007555071897140886),
        (-0.03394168251160551, -0.008148677018477546),
        (-0.03379429900570613, -0.008739799973856321),
        (-0.033636621428956404, -0.009328260701498836),
        (-0.03346869781147521, -0.009913879950566695),
        (-0.033290579304421364, -0.010496479335763809),
        (-0.03310232016441861, -0.011075881391673592),
        (-0.03290397773702414, -0.011651909626816837),
        (-0.03269561243926311, -0.01222438857741337),
        (-0.032477287741223604, -0.012793143860828637),
        (-0.03224907014672351, -0.013358002228694321),
        (-0.032011029173052874, -0.013918791619678794),
        (-0.03176323732979813, -0.014475341211901638),
        (-0.03150577009675637, -0.015027481474966242),
        (-0.031238705900938468, -0.015575044221598056),
        (-0.030962126092688336, -0.016117862658882043),
        (-0.030676114920892172, -0.01665577143906205),
        (-0.03038075950732555, -0.01718860670991429),
        (-0.030076149820108977, -0.017716206164652748),
        (-0.029762378646301046, -0.01823840909137253),
        (-0.02943954156364459, -0.018755056422004035),
        (-0.029107736911439197, -0.01926599078076463),
        (-0.028767065760598953, -0.019771056532100095),
        (-0.028417631882853733, -0.020270099828088473),
        (-0.028059541719150705, -0.020762968655309466),
        (-0.027692904347219827, -0.021249512881141408),
        (-0.027317831448357976, -0.021729584299502003),
        (-0.026934437273404166, -0.022203036675986),
        (-0.026542838607935604, -0.022669725792411777),
        (-0.026143154736702146, -0.023129509490755762),
        (-0.025735507407280256, -0.023582247716447347),
        (-0.025320020792998, -0.02402780256103898),
        (-0.024896821455100193, -0.024466038304207016),
        (-0.024466038304207682, -0.02489682145510086),
        (-0.024027802561038314, -0.025320020792997333),
        (-0.023582247716447347, -0.025735507407280256),
        (-0.023129509490755762, -0.026143154736702146),
        (-0.022669725792411777, -0.026542838607935604),
        (-0.022203036675986, -0.026934437273404166),
        (-0.021729584299502003, -0.027317831448357976),
        (-0.021249512881142074, -0.027692904347220493),
        (-0.0207629686553088, -0.028059541719149816),
        (-0.02027009982808914, -0.02841763188285462),
        (-0.01977105653209943, -0.028767065760598065),
        (-0.01926599078076463, -0.029107736911439197),
        (-0.018755056422004035, -0.02943954156364481),
        (-0.01823840909137253, -0.029762378646301046),
        (-0.01771620616465297, -0.030076149820108866),
        (-0.017188606709914067, -0.03038075950732555),
        (-0.016655771439062494, -0.03067611492089295),
        (-0.0161178626588816, -0.03096212609268767),
        (-0.0155750442215985, -0.031238705900939134),
        (-0.015027481474965798, -0.03150577009675559),
        (-0.014475341211901638, -0.03176323732979813),
        (-0.013918791619679238, -0.03201102917305332),
        (-0.013358002228693877, -0.03224907014672307),
        (-0.01279314386082886, -0.03247728774122405),
        (-0.012224388577413148, -0.03269561243926267),
        (-0.011651909626817059, -0.03290397773702458),
        (-0.01107588139167337, -0.033102320164418164),
        (-0.01049647933576403, -0.03329057930442181),
        (-0.009913879950566695, -0.03346869781147477),
        (-0.009328260701498614, -0.033636621428956404),
        (-0.008739799973856544, -0.033794299005706574),
        (-0.008148677018477324, -0.033941682511605065),
        (-0.007555071897141108, -0.034078727052211766),
        (-0.006959165427716574, -0.03420539088242869),
        (-0.006361139129088089, -0.03432163541922939),
        (-0.005761175165859278, -0.03442742525339859),
        (-0.005159456292865405, -0.034522728160331306),
        (-0.004556165799503242, -0.03460751510983556),
        (-0.0039514874539026135, -0.03468176027498762),
        (-0.0033456054469445107, -0.03474544103999108),
        (-0.002738704336157305, -0.03479853800706534),
        (-0.002130968989499271, -0.034841035002363435),
        (-0.0015225845290438578, -0.03487291908088533),
        (-0.0009137362745910149, -0.03489418053043541),
        (-0.00030460968721746084, -0.034904812874566635),
        (0.00030460968721746084, -0.034904812874567516),
        (0.0009137362745910149, -0.034894180530434526),
        (0.0015225845290438578, -0.03487291908088533),
        (0.002130968989499271, -0.03484103500236342),
        (0.002738704336157305, -0.03479853800706534),
        (0.0033456054469445107, -0.03474544103999111),
        (0.003951487453902391, -0.03468176027498762),
        (0.004556165799503686, -0.03460751510983642),
        (0.005159456292864961, -0.03452272816033042),
        (0.0057611751658595, -0.03442742525339948),
        (0.006361139129088089, -0.0343216354192285),
        (0.006959165427716796, -0.034205390882429576),
        (0.007555071897140664, -0.03407872705221093),
        (0.008148677018477546, -0.033941682511605065),
        (0.008739799973856321, -0.033794299005706574),
        (0.009328260701498836, -0.033636621428956404),
        (0.009913879950566917, -0.033468697811475545),
        (0.010496479335763587, -0.03329057930442103),
        (0.011075881391673814, -0.03310232016441894),
        (0.011651909626816614, -0.032903977737023804),
        (0.01222438857741337, -0.032695612439263555),
        (0.012793143860828637, -0.03247728774122316),
        (0.0133580022286941, -0.03224907014672307),
        (0.013918791619679016, -0.03201102917305332),
        (0.014475341211901638, -0.03176323732979813),
        (0.015027481474966242, -0.03150577009675637),
        (0.015575044221598056, -0.031238705900938357),
        (0.016117862658882043, -0.030962126092688447),
        (0.01665577143906205, -0.030676114920892172),
        (0.01718860670991451, -0.030380759507326327),
        (0.017716206164652526, -0.03007614982010809),
        (0.01823840909137253, -0.02976237864630127),
        (0.018755056422004035, -0.02943954156364459),
        (0.01926599078076463, -0.029107736911439197),
        (0.019771056532099873, -0.028767065760598953),
        (0.020270099828088695, -0.028417631882853733),
        (0.020762968655309244, -0.028059541719150705),
        (0.02124951288114163, -0.027692904347219605),
        (0.021729584299502447, -0.027317831448358865),
        (0.022203036675985555, -0.026934437273403278),
        (0.022669725792411777, -0.026542838607935604),
        (0.023129509490755762, -0.026143154736702368),
        (0.023582247716447347, -0.025735507407280256),
        (0.02402780256103898, -0.025320020792997777),
        (0.024466038304206794, -0.024896821455100415),
        (0.02489682145510086, -0.02446603830420746),
        (0.025320020792997333, -0.024027802561038536),
        (0.025735507407280922, -0.02358224771644779),
        (0.0261431547367017, -0.023129509490755318),
        (0.026542838607935604, -0.022669725792411777),
        (0.026934437273403278, -0.022203036675985333),
        (0.02731783144835953, -0.021729584299503113),
        (0.027692904347219605, -0.021249512881141408),
        (0.02805954171915004, -0.020762968655309022),
        (0.028417631882853733, -0.020270099828088473),
        (0.02876706576059962, -0.01977105653210054),
        (0.029107736911439197, -0.01926599078076463),
        (0.029439541563643923, -0.01875505642200359),
        (0.02976237864630127, -0.01823840909137231),
        (0.030076149820107867, -0.017716206164652748),
        (0.030380759507327215, -0.017188606709914733),
        (0.030676114920892172, -0.016655771439062272),
        (0.03096212609268767, -0.0161178626588816),
        (0.031238705900938357, -0.015575044221598056),
        (0.031505770096757146, -0.015027481474966686),
        (0.03176323732979813, -0.014475341211901638),
        (0.03201102917305254, -0.013918791619678572),
        (0.03224907014672307, -0.0133580022286941),
        (0.03247728774122316, -0.012793143860828637),
        (0.03269561243926433, -0.012224388577413592),
        (0.032903977737023804, -0.011651909626816837),
        (0.033102320164418164, -0.01107588139167337),
        (0.03329057930442092, -0.010496479335763587),
        (0.03346869781147643, -0.009913879950567361),
        (0.033636621428956515, -0.009328260701498614),
        (0.033794299005705686, -0.008739799973856321),
        (0.033941682511605065, -0.008148677018477324),
        (0.03407872705221093, -0.007555071897140886),
        (0.03420539088243035, -0.006959165427716796),
        (0.03432163541922856, -0.006361139129088089),
        (0.03442742525339859, -0.005761175165859278),
        (0.03452272816033042, -0.005159456292865183),
        (0.03460751510983731, -0.004556165799503686),
        (0.03468176027498762, -0.0039514874539026135),
        (0.03474544103999022, -0.0033456054469442886),
        (0.03479853800706534, -0.002738704336157305),
        (0.03484103500236255, -0.002130968989499271),
        (0.03487291908088709, -0.0015225845290438578),
        (0.034894180530434526, -0.0009137362745910149),
        (0.03490481287456663, -0.00030460968721746084),
        (0.03490481287456663, 0.00030460968721746084),
        (0.0348941805304363, 0.0009137362745910149),
        (0.03487291908088533, 0.0015225845290438578),
        (0.03484103500236255, 0.002130968989499049),
        (0.03479853800706534, 0.002738704336157527),
        (0.034745441039990194, 0.0033456054469442886),
        (0.0346817602749894, 0.0039514874539028355),
        (0.03460751510983556, 0.004556165799503242),
        (0.03452272816033042, 0.005159456292865183),
        (0.03442742525339859, 0.005761175165859278),
        (0.03432163541923028, 0.006361139129088533),
        (0.03420539088242863, 0.006959165427716574),
        (0.03407872705221099, 0.007555071897140664),
        (0.03394168251160501, 0.008148677018477324),
        (0.03379429900570574, 0.008739799973856321),
        (0.03363662142895818, 0.00932826070149928),
        (0.03346869781147466, 0.009913879950566695),
        (0.03329057930442103, 0.010496479335763587),
        (0.033102320164418164, 0.01107588139167337),
        (0.03290397773702536, 0.01165190962681728),
        (0.03269561243926278, 0.012224388577413148),
        (0.03247728774122316, 0.012793143860828637),
        (0.03224907014672307, 0.013358002228693877),
        (0.03201102917305254, 0.013918791619678794),
        (0.03176323732979969, 0.014475341211902526),
        (0.03150577009675559, 0.015027481474965576),
        (0.031238705900938468, 0.015575044221598056),
        (0.03096212609268756, 0.01611786265888182),
        (0.030676114920893727, 0.01665577143906294),
        (0.03038075950732566, 0.017188606709914067),
        (0.03007614982010809, 0.017716206164652526),
        (0.029762378646301046, 0.01823840909137253),
        (0.029439541563643923, 0.01875505642200359),
        (0.02910773691144075, 0.019265990780765296),
        (0.028767065760598065, 0.01977105653209965),
        (0.028417631882853733, 0.020270099828088473),
        (0.02805954171915004, 0.020762968655309022),
        (0.02769290434722116, 0.021249512881142518),
        (0.027317831448357976, 0.021729584299502003),
        (0.0269344372734035, 0.022203036675985333),
        (0.026542838607935604, 0.022669725792411777),
        (0.02614315473670148, 0.023129509490755318),
        (0.025735507407281588, 0.023582247716448457),
        (0.025320020792997333, 0.024027802561038536),
        (0.024896821455100193, 0.024466038304206794),
        (0.024466038304207016, 0.024896821455100193),
        (0.024027802561039646, 0.025320020792998665),
        (0.023582247716447124, 0.025735507407280256),
        (0.023129509490755318, 0.02614315473670148),
        (0.022669725792411777, 0.026542838607935604),
        (0.022203036675985555, 0.0269344372734035),
        (0.02172958429950289, 0.02731783144835931),
        (0.02124951288114163, 0.027692904347219827),
        (0.020762968655309022, 0.028059541719149816),
        (0.020270099828088473, 0.028417631882853733),
        (0.01977105653210054, 0.02876706576059984),
        (0.019265990780764408, 0.029107736911439197),
        (0.01875505642200359, 0.029439541563643923),
        (0.01823840909137253, 0.029762378646301046),
        (0.017716206164652526, 0.03007614982010809),
        (0.017188606709914955, 0.030380759507327104),
        (0.016655771439062272, 0.030676114920892172),
        (0.0161178626588816, 0.03096212609268767),
        (0.015575044221598056, 0.031238705900938357),
        (0.015027481474966464, 0.031505770096757146),
        (0.01447534121190186, 0.03176323732979813),
        (0.013918791619678572, 0.03201102917305254),
        (0.0133580022286941, 0.03224907014672307),
        (0.012793143860828415, 0.03247728774122316),
        (0.012224388577413814, 0.03269561243926433),
        (0.011651909626816837, 0.032903977737023804),
        (0.01107588139167337, 0.03310232016441805),
        (0.010496479335763587, 0.03329057930442103),
        (0.00991387995056714, 0.03346869781147643),
        (0.009328260701498836, 0.033636621428956515),
        (0.008739799973856321, 0.03379429900570563),
        (0.008148677018477324, 0.033941682511605065),
        (0.007555071897140886, 0.03407872705221093),
        (0.006959165427716796, 0.03420539088243041),
        (0.006361139129088089, 0.03432163541922856),
        (0.005761175165859278, 0.03442742525339859),
        (0.005159456292865183, 0.03452272816033042),
        (0.004556165799503686, 0.03460751510983731),
        (0.003951487453902391, 0.03468176027498762),
        (0.0033456054469445107, 0.034745441039990194),
        (0.002738704336157305, 0.034798538007065366),
        (0.002130968989499271, 0.03484103500236253),
        (0.0015225845290438578, 0.03487291908088709),
        (0.0009137362745910149, 0.034894180530434526),
        (0.00030460968721746084, 0.03490481287456712)
    ]

    # Get the current position of the object
    model_state = get_model_state(object_name, "world")
    current_position_x = model_state.pose.position.x
    current_position_y = model_state.pose.position.y

    # Iterate over all directions
    for direction in directions:
        t = rospy.Time.now().to_sec()
        target_position_x = current_position_x + direction[0]
        target_position_y = current_position_y + direction[1]

        rate = rospy.Rate(LOOP_RATE_HZ)

        while (
            abs(current_position_x - target_position_x) > POSITION_TOLERANCE or
            abs(current_position_y - target_position_y) > POSITION_TOLERANCE
        ):
            # Calculate the step size for each axis
            step_x = speed * TIME_STEP_SEC if current_position_x < target_position_x else -speed * TIME_STEP_SEC
            step_y = speed * TIME_STEP_SEC if current_position_y < target_position_y else -speed * TIME_STEP_SEC
            d = (direction[0] ** 2 + direction[1] ** 2) ** 0.5
            step_x = direction[0] / (d/speed) * TIME_STEP_SEC
            step_y = direction[1] / (d/speed) * TIME_STEP_SEC

            # Update current positions
            if abs(current_position_x - target_position_x) > abs(step_x):
                current_position_x += step_x
            else:
                current_position_x = target_position_x

            if abs(current_position_y - target_position_y) > abs(step_y):
                current_position_y += step_y
            else:
                current_position_y = target_position_y

            # Create and send the state message
            state_msg = ModelState()
            state_msg.model_name = object_name
            state_msg.pose.position.x = current_position_x
            state_msg.pose.position.y = current_position_y
            state_msg.pose.position.z = model_state.pose.position.z  # Keep Z constant
            state_msg.pose.orientation = model_state.pose.orientation  # Keep orientation constant
            state_msg.twist.linear.x = step_x #/ TIME_STEP_SEC  # Linear speed approximation
            state_msg.twist.linear.y = step_y #/ TIME_STEP_SEC
            state_msg.reference_frame = "world"

            try:
                resp = set_model_state(state_msg)
                if not resp.success:
                    rospy.logerr(f"Failed to move object: Dodecaedr")
            except:
                rospy.logerr(f"Failed to move object: Dodecaedr")

            rate.sleep()

        #rospy.loginfo(f"Reached target position: ({target_position_x:.2f}, {target_position_y:.2f})")

        # Update the current position for the next direction
        current_position_x = target_position_x
        current_position_y = target_position_y
        #print(rospy.Time.now().to_sec() - t)


if __name__ == '__main__':
    rospy.init_node('move_object_c', anonymous=True)
    try:
        # Randomize speed and define parameters
        MIN_SPEED = 0.2
        MAX_SPEED = 0.6
        MOVE_DISTANCE = 2.0
        OBJECT_NAME = "Dodecaedr"  # Replace with your Gazebo model name


        speed = random.uniform(MIN_SPEED, MAX_SPEED)  # Randomized speed
        
        #speed = 0.5

        while not rospy.is_shutdown():
            move_object(speed, MOVE_DISTANCE, OBJECT_NAME)
            #rospy.loginfo(f"Randomized speed for Dodecaedr: {speed:.2f} m/s")
    except rospy.ROSInterruptException:
        pass
